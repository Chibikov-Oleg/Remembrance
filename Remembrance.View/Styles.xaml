<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:commonConverters="clr-namespace:Scar.Common.WPF.Converters;assembly=Scar.Common.WPF.Converters"
    xmlns:converters="clr-namespace:Remembrance.View.Converters"
    xmlns:autoComplete="clr-namespace:Scar.Common.WPF.Controls.AutoCompleteTextBox.Controls;assembly=Scar.Common.WPF.Controls.AutoCompleteTextBox"
    xmlns:xceed="clr-namespace:Scar.Common.WPF.Xceed;assembly=Scar.Common.WPF.Controls.XceedAutoFitColumnGrid"
    xmlns:commonView="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View"
    xmlns:animatedWindow="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View.AnimatedWindow"
    xmlns:baseWindow="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View.BaseWindow"
    xmlns:controls="clr-namespace:Remembrance.View.Controls">

    <Brush
        x:Key="Foreground">
        White
    </Brush>

    <Brush
        x:Key="Background">
        #FF464646
    </Brush>

    <Brush
        x:Key="DarkerBackground">
        #FF363636
    </Brush>

    <Brush
        x:Key="Border">
        #FF262626
    </Brush>

    <Brush
        x:Key="Selection">
        DarkKhaki
    </Brush>

    <Brush
        x:Key="Favorite">
        Gold
    </Brush>

    <Brush
        x:Key="WordInfo">
        Silver
    </Brush>

    <Brush
        x:Key="Red">
        OrangeRed
    </Brush>

    <Brush
        x:Key="Green">
        MediumSeaGreen
    </Brush>

    <Color
        x:Key="GreenColor">
        MediumSeaGreen
    </Color>

    <system:Double
        x:Key="CommonMargin">
        5
    </system:Double>

    <system:Double
        x:Key="CommonButtonSize">
        25
    </system:Double>

    <system:Double
        x:Key="HugeFontSize">
        24
    </system:Double>

    <system:Double
        x:Key="BigFontSize">
        20
    </system:Double>

    <system:Double
        x:Key="MediumFontSize">
        16
    </system:Double>

    <system:Double
        x:Key="SmallFontSize">
        14
    </system:Double>

    <Style
        x:Key="Control"
        TargetType="{x:Type commonView:BaseControl}">
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
        <Setter
            Property="Background"
            Value="{StaticResource Background}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
    </Style>

    <Style
        TargetType="{x:Type commonView:BaseControl}"
        BasedOn="{StaticResource {x:Type Control}}" />

    <Style
        TargetType="{x:Type baseWindow:BaseWindow}"
        BasedOn="{StaticResource {x:Type Control}}" />

    <Style
        TargetType="{x:Type animatedWindow:AnimatedWindow}"
        BasedOn="{StaticResource {x:Type Control}}" />

    <FontFamily
        x:Key="Font">
        ./Fonts/#Champagne &amp; Limousines
    </FontFamily>

    <FontFamily
        x:Key="LogoFont">
        ./Fonts/#Cubic
    </FontFamily>

    <system:String
        x:Key="AdditionalInfoFormat">
        ({0})
    </system:String>

    <Style
        TargetType="materialDesign:PackIcon"
        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="0" />
    </Style>

    <Style
        TargetType="Button"
        BasedOn="{StaticResource {x:Type Button}}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
    </Style>

    <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
    <Style
        TargetType="Button"
        x:Key="ImageButton"
        BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="0" />
        <Setter
            Property="Width"
            Value="{StaticResource CommonButtonSize}" />
        <Setter
            Property="Height"
            Value="{StaticResource CommonButtonSize}" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
    </Style>

    <Style
        TargetType="TextBlock"
        BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource Font}" />
        <Setter
            Property="FontSize"
            Value="{StaticResource MediumFontSize}" />
    </Style>

    <Style
        TargetType="TextBox"
        BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource Font}" />
        <Setter
            Property="FontSize"
            Value="{StaticResource MediumFontSize}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
    </Style>

    <Style
        TargetType="Expander"
        BasedOn="{StaticResource {x:Type Expander}}">
        <Setter
            Property="Background"
            Value="{StaticResource Background}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
    </Style>

    <Style
        TargetType="autoComplete:CompletableTextBox"
        BasedOn="{StaticResource {x:Type TextBox}}" />

    <Style
        x:Key="Logo"
        TargetType="TextBlock"
        BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter
            Property="FontFamily"
            Value="{StaticResource LogoFont}" />
        <Setter
            Property="FontSize"
            Value="{StaticResource HugeFontSize}" />
    </Style>

    <Style
        TargetType="controls:WordControl">
        <Setter
            Property="FontSize"
            Value="{StaticResource MediumFontSize}" />
    </Style>

    <Style
        TargetType="controls:WordsControl">
        <Setter
            Property="FontSize"
            Value="{StaticResource MediumFontSize}" />
    </Style>

    <!--ScrollBar-->
    <Style TargetType="{x:Type ScrollViewer}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template" Value="{DynamicResource ScrollViewerControlTemplate}"/>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!--<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>-->
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>

    <!--Scrollbar Thumbs-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                                Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Background" Value="{StaticResource Background}" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End ScrollBar-->

    <Style
        TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
        <!--Do not use lex:loc in the styles setter - can crash while switching language-->
        <Setter
            Property="NoGroupContent"
            Value="☩" />
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
        <Setter
            Property="Background"
            Value="{StaticResource Background}" />
        <!--<Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />-->
    </Style>

    <DataTemplate
        x:Key="CellTemplate">
        <TextBlock
            Style="{StaticResource {x:Type TextBlock}}"
            Text="{Binding Mode=OneTime}" />
    </DataTemplate>

    <DataTemplate
        x:Key="CellEditorTemplate">
        <TextBox
            Style="{StaticResource {x:Type TextBox}}"
            Text="{xcdg:CellEditorBinding}" />
    </DataTemplate>

    <Style
        x:Key="ItemIndexSelectorStyle"
        TargetType="{x:Type xcdg:RowSelector}">
        <!--<Setter
            Property="Content"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=ItemIndex}" />-->
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
        <Setter
            Property="Background"
            Value="{StaticResource Background}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
    </Style>

    <Style
        TargetType="{x:Type xcdg:RowSelectorPane}">
        <Setter
            Property="Visibility"
            Value="Collapsed" />
    </Style>

    <Style
        TargetType="{x:Type xcdg:DataRow}">
        <Setter
            Property="xcdg:RowSelector.RowSelectorStyle"
            Value="{StaticResource ItemIndexSelectorStyle}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="SelectionBackground"
            Value="{StaticResource Selection}" />
        <Setter Property="SelectionForeground" Value="{StaticResource Foreground}" />
    </Style>

    <xcdg:CellEditor
        x:Key="CellEditor"
        EditTemplate="{StaticResource CellEditorTemplate}" />

    <Style
        TargetType="xceed:XceedAutoFitColumnGrid">
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
        <Setter
            Property="Background"
            Value="{StaticResource Background}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
    </Style>

    <Style
        TargetType="xcdg:Cell">
        <Setter
            Property="FontFamily"
            Value="{StaticResource Font}" />
        <Setter
            Property="FontSize"
            Value="{StaticResource MediumFontSize}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource Foreground}" />
        <Setter
            Property="Background"
            Value="{StaticResource Background}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />

        <Setter Property="CurrentBackground" Value="{StaticResource Selection}"/>
        <Setter Property="CurrentForeground" Value="{StaticResource Foreground}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Background"
                    Value="{StaticResource Selection}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        BasedOn="{StaticResource {x:Type xcdg:Cell}}"
        TargetType="xcdg:DataCell" />

    <Style
        BasedOn="{StaticResource {x:Type xcdg:Cell}}"
        TargetType="xcdg:ColumnManagerCell" />

    <commonConverters:NotNullToVisibilityConverter
        x:Key="NotNullToVisibilityConverter" />
    <commonConverters:NullToVisibilityConverter
        x:Key="NullToVisibilityConverter" />
    <commonConverters:BoolToVisibilityConverter
        x:Key="BoolToVisibilityConverter" />
    <commonConverters:NullToBooleanConverter
        x:Key="NullToBooleanConverter" />
    <commonConverters:ReverseBoolToVisibilityConverter
        x:Key="ReverseBoolToVisibilityConverter" />
    <commonConverters:StringToVisibilityConverter
        x:Key="StringToVisibilityConverter" />
    <commonConverters:AddValueConverter
        x:Key="AddValueConverter" />
    <commonConverters:CollectionToVisibilityConverter
        x:Key="CollectionToVisibilityConverter" />
    <commonConverters:PercentageIntToDoubleConverter
        x:Key="PercentageIntToDoubleConverter" />
    <commonConverters:DoubleToTextTimeSpanConverter
        x:Key="DoubleToTextTimeSpanConverter" />
    <commonConverters:FilePathToIconImageSourceConverter
        x:Key="FilePathToIconImageSourceConverter" />
    <converters:RepeatTypeConverter
        x:Key="RepeatTypeConverter" />
    <converters:DateTimeToBrushConverter
        x:Key="DateTimeToBrushConverter" />
    <converters:WordConcatConverter
        x:Key="WordConcatConverter" />
    <converters:PartOfSpeechToVisibilityConverter
        x:Key="PartOfSpeechToVisibilityConverter" />
    <converters:PriorityWordViewModelToVisibilityConverter
        x:Key="PriorityWordViewModelToVisibilityConverter" />
    <converters:PriorityWordViewModelToBooleanConverter
        x:Key="PriorityWordViewModelToBooleanConverter" />
    <converters:PartOfSpeechLocalizedConverter
        x:Key="PartOfSpeechLocalizedConverter" />
    <converters:MessageTypeToBrushConverter
        x:Key="MessageTypeToBrushConverter" />
</ResourceDictionary>