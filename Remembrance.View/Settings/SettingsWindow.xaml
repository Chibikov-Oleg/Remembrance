<window:AnimatedWindow
    x:Class="Remembrance.View.Settings.SettingsWindow"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:window="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View.AnimatedWindow"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:commonView="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:settings="clr-namespace:Remembrance.ViewModel.Settings;assembly=Remembrance.ViewModel"
    xmlns:commonConverters="clr-namespace:Scar.Common.WPF.Converters;assembly=Scar.Common.WPF.Converters"
    lex:LocalizeDictionary.DesignCulture="en"
    lex:LocalizeDictionary.OutputMissingKeys="True"
    lex:ResxLocalizationProvider.DefaultAssembly="Remembrance.Resources"
    lex:ResxLocalizationProvider.DefaultDictionary="Texts"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance d:Type=settings:SettingsViewModel}"
    SizeToContent="Height"
    Width="700"
    Icon="../IconAlt.ico">
    <i:Interaction.Triggers>
        <i:EventTrigger
            EventName="Closing">
            <i:InvokeCommandAction
                Command="{Binding WindowClosingCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <window:AnimatedWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="../Styles.xaml" />
                <ResourceDictionary>
                    <commonConverters:PercentageIntToDoubleConverter
                        x:Key="PercentageIntToDoubleConverter" />
                </ResourceDictionary>
                <ResourceDictionary
                    Source="../Slider.xaml" />
                <ResourceDictionary>
                    <commonConverters:DoubleToTextTimeSpanConverter
                        x:Key="DoubleToTextTimeSpanConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </window:AnimatedWindow.Resources>
    <window:AnimatedWindow.TaskbarItemInfo>
        <TaskbarItemInfo
            ProgressState="{Binding ProgressState, Mode=OneWay}"
            Description="{Binding ProgressDescription, Mode=OneWay}"
            ProgressValue="{Binding Progress, Mode=OneWay, Converter={StaticResource PercentageIntToDoubleConverter}}" />
    </window:AnimatedWindow.TaskbarItemInfo>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>
        <Grid
            Grid.Row="0"
            commonView:MarginSetter.Orientation="Vertical"
            commonView:MarginSetter.Margin="{StaticResource CommonMargin}">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="180" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Text="{lex:Loc ReverseTranslation}" />
            <DockPanel
                Grid.Row="0"
                Grid.Column="1">
                <CheckBox
                    IsChecked="{Binding ReverseTranslation, Mode=TwoWay}" />
                <StackPanel
                    commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
                    <Button
                        Style="{StaticResource ImageButton}"
                        ToolTip="{lex:Loc ViewLogs}"
                        Command="{Binding ViewLogsCommand, Mode=OneTime}">
                        <materialDesign:PackIcon
                            Kind="FileDocument" />
                    </Button>
                    <Button
                        Style="{StaticResource ImageButton}"
                        ToolTip="{lex:Loc OpenSharedFolder}"
                        Command="{Binding OpenSharedFolderCommand}">
                        <materialDesign:PackIcon
                            Kind="Dropbox" />
                    </Button>
                    <Button
                        Style="{StaticResource ImageButton}"
                        ToolTip="{lex:Loc OpenSettingsFolder}"
                        Command="{Binding OpenSettingsFolderCommand, Mode=OneTime}">
                        <materialDesign:PackIcon
                            Kind="Folder" />
                    </Button>
                </StackPanel>
            </DockPanel>

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Text="{lex:Loc RandomTranslation}" />
            <DockPanel
                Grid.Row="1"
                Grid.Column="1">
                <CheckBox
                    IsChecked="{Binding RandomTranslation, Mode=TwoWay}" />
                <Button
                    Background="ForestGreen"
                    Style="{StaticResource ImageButton}"
                    ToolTip="{lex:Loc Export}"
                    Command="{Binding ExportCommand, Mode=OneTime}"
                    HorizontalAlignment="Right">
                    <materialDesign:PackIcon
                        Kind="Export" />
                </Button>
            </DockPanel>

            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Text="{lex:Loc UiLanguage}" />

            <DockPanel
                Grid.Row="2"
                Grid.Column="1">
                <ComboBox
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding AvailableUiLanguages, Mode=OneTime}"
                    SelectedItem="{Binding UiLanguage, Mode=TwoWay}"
                    SelectedValuePath="Code"
                    DisplayMemberPath="DisplayName" />
                <Button
                    Background="OrangeRed"
                    Style="{StaticResource ImageButton}"
                    ToolTip="{lex:Loc Import}"
                    Command="{Binding ImportCommand, Mode=OneTime}"
                    HorizontalAlignment="Right">
                    <materialDesign:PackIcon
                        Kind="Import" />
                </Button>
            </DockPanel>

            <TextBlock
                Grid.Row="3"
                Grid.Column="0"
                Text="{lex:Loc TtsSpeaker}" />

            <DockPanel
                commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                commonView:MarginSetter.Orientation="Horizontal"
                Grid.Row="3"
                Grid.Column="1">
                <ComboBox
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding AvailableTtsSpeakers, Mode=OneTime}"
                    SelectedValue="{Binding TtsSpeaker, Mode=TwoWay}"
                    SelectedValuePath="Key"
                    DisplayMemberPath="Value" />
                <ComboBox
                    HorizontalAlignment="Left"
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding AvailableVoiceEmotions, Mode=OneTime}"
                    SelectedValue="{Binding TtsVoiceEmotion, Mode=TwoWay}"
                    SelectedValuePath="Key"
                    DisplayMemberPath="Value" />
            </DockPanel>

            <TextBlock
                Grid.Row="4"
                Grid.Column="0"
                Text="{lex:Loc CardShowFrequency}" />

            <Slider
                Grid.Row="4"
                Grid.Column="1"
                Minimum="0.08333"
                Maximum="120"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                Ticks="0.08333,0.5,1,2,5,10,15,20,30,60,90,120"
                Value="{Binding CardShowFrequency, Mode=TwoWay}"
                AutoToolTipPlacement="None"
                ToolTip="{Binding Value, Converter={StaticResource DoubleToTextTimeSpanConverter}, ConverterParameter={x:Static commonConverters:DateInterval.Minutes}, RelativeSource={RelativeSource Self}}" />

            <TextBlock
                Grid.Row="5"
                Grid.Column="0"
                Text="{lex:Loc TranslationCloseTimeout}" />

            <Slider
                Grid.Row="5"
                Grid.Column="1"
                Minimum="1"
                Maximum="60"
                TickFrequency="1"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                Value="{Binding TranslationCloseTimeout, Mode=TwoWay}"
                AutoToolTipPlacement="None"
                ToolTip="{Binding Value, Converter={StaticResource DoubleToTextTimeSpanConverter}, ConverterParameter={x:Static commonConverters:DateInterval.Seconds}, RelativeSource={RelativeSource Self}}" />

            <TextBlock
                Grid.Row="6"
                Grid.Column="0"
                Text="{lex:Loc AssessmentSuccessCloseTimeout}" />

            <Slider
                Grid.Row="6"
                Grid.Column="1"
                Minimum="1"
                Maximum="60"
                TickFrequency="1"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                Value="{Binding AssessmentSuccessCloseTimeout, Mode=TwoWay}"
                AutoToolTipPlacement="None"
                ToolTip="{Binding Value, Converter={StaticResource DoubleToTextTimeSpanConverter}, ConverterParameter={x:Static commonConverters:DateInterval.Seconds}, RelativeSource={RelativeSource Self}}" />

            <TextBlock
                Grid.Row="7"
                Grid.Column="0"
                Text="{lex:Loc AssessmentFailureCloseTimeout}" />

            <Slider
                Grid.Row="7"
                Grid.Column="1"
                Minimum="1"
                Maximum="60"
                TickFrequency="1"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                Value="{Binding AssessmentFailureCloseTimeout, Mode=TwoWay}"
                AutoToolTipPlacement="None"
                ToolTip="{Binding Value, Converter={StaticResource DoubleToTextTimeSpanConverter}, ConverterParameter={x:Static commonConverters:DateInterval.Seconds}, RelativeSource={RelativeSource Self}}" />

            <Button
                Grid.Row="8"
                Grid.Column="1"
                Content="{lex:Loc Save}"
                Width="120"
                HorizontalAlignment="Right"
                ToolTip="{lex:Loc Save}"
                Command="{Binding SaveCommand, Mode=OneTime}" />

            <Grid.Style>
                <Style
                    TargetType="Grid">
                    <Setter
                        Property="IsEnabled"
                        Value="True" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ProgressState, Mode=OneWay}"
                            Value="Normal">
                            <Setter
                                Property="IsEnabled"
                                Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <Border
            Grid.Row="1"
            Margin="0 5 0 0"
            BorderThickness="0">
            <Border.Style>
                <Style
                    TargetType="Border">
                    <Setter
                        Property="Visibility"
                        Value="Collapsed" />
                    <Setter
                        Property="Opacity"
                        Value="0" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding ProgressState, Mode=OneWay}"
                            Value="Normal">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard
                                        Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation
                                            From="0"
                                            To="1"
                                            Duration="0:0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard
                                        Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation
                                            Duration="0:0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                            <Setter
                                Property="Visibility"
                                Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <!-- Progress Bar -->
            <ProgressBar
                Minimum="0"
                Maximum="100"
                HorizontalAlignment="Stretch"
                Height="20"
                Value="{Binding Progress, Mode=OneWay}"
                ToolTip="{Binding ProgressDescription, Mode=OneWay}" />
        </Border>
    </Grid>
</window:AnimatedWindow>